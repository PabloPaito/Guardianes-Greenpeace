//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Earthwatchers.Services.Resources.Labels {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Labels {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Labels() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Earthwatchers.Services.Resources.Labels.Labels", typeof(Labels).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argentine.
        /// </summary>
        public static string AR {
            get {
                return ResourceManager.GetString("AR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brazil.
        /// </summary>
        public static string BR {
            get {
                return ResourceManager.GetString("BR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to China.
        /// </summary>
        public static string CN {
            get {
                return ResourceManager.GetString("CN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congrats!.
        /// </summary>
        public static string Congrats {
            get {
                return ResourceManager.GetString("Congrats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Earthwatchers - Greenpeace.
        /// </summary>
        public static string GuardiansGreenpeace {
            get {
                return ResourceManager.GetString("GuardiansGreenpeace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Report.
        /// </summary>
        public static string IncorrectReport {
            get {
                return ResourceManager.GetString("IncorrectReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your plot has been checked by Greenpeace and we have determinated than your report was wrong.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What this means?&lt;/b&gt;&lt;br&gt;
        ///     The plot that you reported in Green (safe) was reviewed by our experts who determined that&lt;b&gt;it do have deforestation.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;
        ///  But don&apos;t worry, in time you&apos;ll gain more experience and train your eye to better identify deforested areas and safe.&lt;br /&gt;&lt;br /&gt;
        ///    &lt;b&gt;What happens now?&lt;/b&gt;&lt;br /&gt;
        ///    From this moment, the plot will be able to Denounce. It will be  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string IncorrectReport2 {
            get {
                return ResourceManager.GetString("IncorrectReport2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your plot has been checked by Greenpeace and we have determinated than your report was wrong.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What this means?&lt;/b&gt;&lt;br&gt;
        ///  The plot that you reported in Yellow (deforestation) was reviewed by our experts who determined that&lt;b&gt;it do not have deforestation.&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;, or that deforestation was earlier than {0}&lt;/b&gt;, when we do not have forest law.&lt;br /&gt;&lt;br /&gt;
        ///   &lt;b&gt;But there is a disassemble, why did i had a plot assigned with previous deforestation to {1}?&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;
        ///   In some cases [rest of string was truncated]&quot;;.
        /// </summary>
        public static string IncorrectReport3 {
            get {
                return ResourceManager.GetString("IncorrectReport3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You came to 30 checks on your plot.
        /// </summary>
        public static string LandVerifications {
            get {
                return ResourceManager.GetString("LandVerifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations, another 30 guardians have verified the report of your plot..
        /// </summary>
        public static string LandVerifications2 {
            get {
                return ResourceManager.GetString("LandVerifications2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From now Greenpeace will verify the validity of the report!.
        /// </summary>
        public static string LandVerifications3 {
            get {
                return ResourceManager.GetString("LandVerifications3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to continue protecting the forest.
        /// </summary>
        public static string LandVerifications4 {
            get {
                return ResourceManager.GetString("LandVerifications4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect the forest.
        /// </summary>
        public static string LandVerifications5 {
            get {
                return ResourceManager.GetString("LandVerifications5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message was sent to.
        /// </summary>
        public static string LandVerifications6 {
            get {
                return ResourceManager.GetString("LandVerifications6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to . If you do not want to receive notifications in the future you can access the User Control Panel and disable the notifications..
        /// </summary>
        public static string LandVerifications7 {
            get {
                return ResourceManager.GetString("LandVerifications7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Greenpeace. All rights reserved..
        /// </summary>
        public static string LandVerifications8 {
            get {
                return ResourceManager.GetString("LandVerifications8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plot Verified.
        /// </summary>
        public static string LandVerified {
            get {
                return ResourceManager.GetString("LandVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your plot has been checked by Greenpeace and we have determinated than your report was correct.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What this means?&lt;/b&gt;&lt;br&gt;
        ///  The plot that you reported in Yellow (deforestation) &lt;b&gt;has been effectively deforested&lt;/b&gt;. This fact should be reported, we can not allow the deforestation in areas protected by the Forest Law.&lt;br /&gt;&lt;br /&gt;
        ///From this moment, your parcel will be enabled for Denounces. It will appear with a red color within Guardians, and clicking on it and then clicking [Report], you wil [rest of string was truncated]&quot;;.
        /// </summary>
        public static string LandVerified2 {
            get {
                return ResourceManager.GetString("LandVerified2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2008.
        /// </summary>
        public static string LawYear {
            get {
                return ResourceManager.GetString("LawYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to Guardians.
        /// </summary>
        public static string MailBienvenidaAsunto {
            get {
                return ResourceManager.GetString("MailBienvenidaAsunto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect the Forest.
        /// </summary>
        public static string MailBienvenidaBoton {
            get {
                return ResourceManager.GetString("MailBienvenidaBoton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to start protecting the forest.
        /// </summary>
        public static string MailBienvenidaBotonTooltip {
            get {
                return ResourceManager.GetString("MailBienvenidaBotonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To start playing click the button!
        ///&lt;br&gt;&lt;/br&gt;
        ///
        ///&lt;b&gt;Tips to play&lt;/b&gt;
        ///&lt;ul&gt;
        ///&lt;li&gt; You can have a new plot clicking [Change Plot]&lt;/li&gt;
        ///&lt;li&gt; Comment on other users plots to helph them reporting&lt;/li&gt;
        ///&lt;li&gt; Complete all tutorials and play miniGames&lt;/li&gt;
        ///&lt;li&gt; Login many times in the same day to get more points&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        public static string MailBienvenidaCuerpo {
            get {
                return ResourceManager.GetString("MailBienvenidaCuerpo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are now protecting the forest!.
        /// </summary>
        public static string MailBienvenidaTitulo {
            get {
                return ResourceManager.GetString("MailBienvenidaTitulo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This region has been completed thanks to your participation and the other guardians. Soon we will have a new satellite image to continue monitoring. Meanwhile, you can check other region..
        /// </summary>
        public static string NoMoreLands {
            get {
                return ResourceManager.GetString("NoMoreLands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now.
        /// </summary>
        public static string Now {
            get {
                return ResourceManager.GetString("Now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your plot has been checked by Greenpeace and we have determinated than your report was correct.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;What this means?&lt;/b&gt;&lt;br&gt;
        ///  The plot that you reported in Green (safe) effectively &lt;b&gt;has not been deforested&lt;/b&gt;. 
        ///When available a new satellite image, this plot will be available for guardians 
        ///  so that you can check again for deforestation&lt;br /&gt;&lt;br /&gt;Continues to report plots forest plots to keep forest safe!.
        /// </summary>
        public static string ReportVerifiedCorrect {
            get {
                return ResourceManager.GetString("ReportVerifiedCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to United States.
        /// </summary>
        public static string US {
            get {
                return ResourceManager.GetString("US", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verification report.
        /// </summary>
        public static string VerificationReport {
            get {
                return ResourceManager.GetString("VerificationReport", resourceCulture);
            }
        }
    }
}
